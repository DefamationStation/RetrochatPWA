{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggel\\\\Downloads\\\\LLMs\\\\pwa-chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput';\nimport Settings from './components/Settings';\nimport { FaTrash } from 'react-icons/fa';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [serverAddress, setServerAddress] = useState('http://127.0.0.1:8080');\n  useEffect(() => {\n    const savedChats = localStorage.getItem('chats');\n    const savedAddress = localStorage.getItem('serverAddress');\n    if (savedChats) {\n      const parsedChats = JSON.parse(savedChats);\n      setChats(parsedChats);\n      setCurrentChatId(parsedChats.length > 0 ? 0 : null);\n    }\n    if (savedAddress) {\n      setServerAddress(savedAddress);\n    }\n  }, []);\n  const handleDeleteChat = () => {\n    if (currentChatId !== null) {\n      setChats(prevChats => {\n        const updatedChats = prevChats.filter(chat => chat.id !== currentChatId);\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\n        return updatedChats;\n      });\n      setCurrentChatId(prevChats => prevChats.length > 0 ? prevChats[0].id : null);\n    }\n  };\n  const getBotResponse = async message => {\n    if (currentChatId === null) return;\n    const fullChat = [...chats[currentChatId].messages, {\n      sender: 'user',\n      text: message\n    }].map(msg => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text\n    }));\n    const response = await axios.post(`${serverAddress}/v1/chat/completions`, {\n      messages: fullChat\n    });\n    const botMessage = response.data.choices[0].message.content;\n    setChats(prevChats => {\n      const lastMessage = prevChats[currentChatId].messages.slice(-1)[0];\n      if (lastMessage && lastMessage.text === botMessage && lastMessage.sender === 'bot') {\n        return prevChats;\n      }\n      const updatedChats = [...prevChats];\n      updatedChats[currentChatId].messages.push({\n        sender: 'bot',\n        text: botMessage\n      });\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\n      return updatedChats;\n    });\n    return botMessage;\n  };\n  const handleSend = async message => {\n    if (currentChatId !== null) {\n      setChats(prevChats => {\n        const updatedChats = [...prevChats];\n        updatedChats[currentChatId].messages.push({\n          sender: 'user',\n          text: message\n        });\n        return updatedChats;\n      });\n      try {\n        await getBotResponse(message);\n      } catch (error) {\n        console.error('Error communicating with the API:', error);\n      }\n    }\n  };\n  const handleNewChat = () => {\n    const newChat = {\n      id: chats.length,\n      messages: []\n    };\n    setChats(prevChats => {\n      const updatedChats = [...prevChats, newChat];\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\n      return updatedChats;\n    });\n    setCurrentChatId(newChat.id);\n  };\n  const handleSelectChat = chatId => {\n    setCurrentChatId(chatId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewChat,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowSettings(true),\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaTrash, {\n        onClick: handleDeleteChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatHistory, {\n        chats: chats,\n        onSelectChat: handleSelectChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: currentChatId !== null && chats[currentChatId] && chats[currentChatId].messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: () => setShowSettings(false),\n      onSave: newAddress => setServerAddress(newAddress)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"b1q2HFP5Dn26SHqO30AU18aZNSY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatHistory","ChatInput","Settings","FaTrash","jsxDEV","_jsxDEV","App","_s","chats","setChats","currentChatId","setCurrentChatId","showSettings","setShowSettings","serverAddress","setServerAddress","savedChats","localStorage","getItem","savedAddress","parsedChats","JSON","parse","length","handleDeleteChat","prevChats","updatedChats","filter","chat","id","setItem","stringify","getBotResponse","message","fullChat","messages","sender","text","map","msg","role","content","response","post","botMessage","data","choices","lastMessage","slice","push","handleSend","error","console","handleNewChat","newChat","handleSelectChat","chatId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSelectChat","index","onSend","onClose","onSave","newAddress","_c","$RefreshReg$"],"sources":["C:/Users/aggel/Downloads/LLMs/pwa-chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ChatHistory from './components/ChatHistory';\r\nimport ChatInput from './components/ChatInput';\r\nimport Settings from './components/Settings';\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [currentChatId, setCurrentChatId] = useState(null);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [serverAddress, setServerAddress] = useState('http://127.0.0.1:8080');\r\n\r\n  useEffect(() => {\r\n    const savedChats = localStorage.getItem('chats');\r\n    const savedAddress = localStorage.getItem('serverAddress');\r\n    if (savedChats) {\r\n      const parsedChats = JSON.parse(savedChats);\r\n      setChats(parsedChats);\r\n      setCurrentChatId(parsedChats.length > 0 ? 0 : null);\r\n    }\r\n    if (savedAddress) {\r\n      setServerAddress(savedAddress);\r\n    }\r\n  }, []);\r\n\r\n  const handleDeleteChat = () => {\r\n    if (currentChatId !== null) {\r\n      setChats(prevChats => {\r\n        const updatedChats = prevChats.filter(chat => chat.id !== currentChatId);\r\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n        return updatedChats;\r\n      });\r\n      setCurrentChatId(prevChats => (prevChats.length > 0 ? prevChats[0].id : null));\r\n    }\r\n  };\r\n\r\n  const getBotResponse = async (message) => {\r\n    if (currentChatId === null) return;\r\n    \r\n    const fullChat = [\r\n      ...chats[currentChatId].messages,\r\n      { sender: 'user', text: message }\r\n    ].map(msg => ({\r\n      role: msg.sender === 'user' ? 'user' : 'assistant',\r\n      content: msg.text\r\n    }));\r\n\r\n    const response = await axios.post(`${serverAddress}/v1/chat/completions`, {\r\n      messages: fullChat,\r\n    });\r\n\r\n    const botMessage = response.data.choices[0].message.content;\r\n\r\n    setChats(prevChats => {\r\n      const lastMessage = prevChats[currentChatId].messages.slice(-1)[0];\r\n      if (lastMessage && lastMessage.text === botMessage && lastMessage.sender === 'bot') {\r\n        return prevChats;\r\n      }\r\n\r\n      const updatedChats = [...prevChats];\r\n      updatedChats[currentChatId].messages.push({ sender: 'bot', text: botMessage });\r\n\r\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n\r\n      return updatedChats;\r\n    });\r\n\r\n    return botMessage;\r\n  };\r\n\r\n  const handleSend = async (message) => {\r\n    if (currentChatId !== null) {\r\n      setChats(prevChats => {\r\n        const updatedChats = [...prevChats];\r\n        updatedChats[currentChatId].messages.push({ sender: 'user', text: message });\r\n        return updatedChats;\r\n      });\r\n\r\n      try {\r\n        await getBotResponse(message);\r\n      } catch (error) {\r\n        console.error('Error communicating with the API:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    const newChat = { id: chats.length, messages: [] };\r\n    setChats((prevChats) => {\r\n      const updatedChats = [...prevChats, newChat];\r\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n      return updatedChats;\r\n    });\r\n    setCurrentChatId(newChat.id);\r\n  };\r\n\r\n  const handleSelectChat = (chatId) => {\r\n    setCurrentChatId(chatId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"sidebar\">\r\n        <button onClick={handleNewChat}>New Chat</button>\r\n        <button onClick={() => setShowSettings(true)}>Settings</button>\r\n        <FaTrash onClick={handleDeleteChat} />\r\n        <ChatHistory chats={chats} onSelectChat={handleSelectChat} />\r\n      </div>\r\n      <div className=\"main\">\r\n        <div className=\"chat-window\">\r\n          {currentChatId !== null && chats[currentChatId] && (\r\n            chats[currentChatId].messages.map((message, index) => (\r\n              <div key={index} className={`message ${message.sender}`}>\r\n                {message.text}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <ChatInput onSend={handleSend} />\r\n      </div>\r\n      {showSettings && (\r\n        <Settings\r\n          onClose={() => setShowSettings(false)}\r\n          onSave={(newAddress) => setServerAddress(newAddress)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,uBAAuB,CAAC;EAE3EC,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAIF,UAAU,EAAE;MACd,MAAMI,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;MAC1CP,QAAQ,CAACW,WAAW,CAAC;MACrBT,gBAAgB,CAACS,WAAW,CAACG,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IACrD;IACA,IAAIJ,YAAY,EAAE;MAChBJ,gBAAgB,CAACI,YAAY,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAId,aAAa,KAAK,IAAI,EAAE;MAC1BD,QAAQ,CAACgB,SAAS,IAAI;QACpB,MAAMC,YAAY,GAAGD,SAAS,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKnB,aAAa,CAAC;QACxEO,YAAY,CAACa,OAAO,CAAC,OAAO,EAAET,IAAI,CAACU,SAAS,CAACL,YAAY,CAAC,CAAC;QAC3D,OAAOA,YAAY;MACrB,CAAC,CAAC;MACFf,gBAAgB,CAACc,SAAS,IAAKA,SAAS,CAACF,MAAM,GAAG,CAAC,GAAGE,SAAS,CAAC,CAAC,CAAC,CAACI,EAAE,GAAG,IAAK,CAAC;IAChF;EACF,CAAC;EAED,MAAMG,cAAc,GAAG,MAAOC,OAAO,IAAK;IACxC,IAAIvB,aAAa,KAAK,IAAI,EAAE;IAE5B,MAAMwB,QAAQ,GAAG,CACf,GAAG1B,KAAK,CAACE,aAAa,CAAC,CAACyB,QAAQ,EAChC;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEJ;IAAQ,CAAC,CAClC,CAACK,GAAG,CAACC,GAAG,KAAK;MACZC,IAAI,EAAED,GAAG,CAACH,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,WAAW;MAClDK,OAAO,EAAEF,GAAG,CAACF;IACf,CAAC,CAAC,CAAC;IAEH,MAAMK,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,IAAI,CAAC,GAAG7B,aAAa,sBAAsB,EAAE;MACxEqB,QAAQ,EAAED;IACZ,CAAC,CAAC;IAEF,MAAMU,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACb,OAAO,CAACQ,OAAO;IAE3DhC,QAAQ,CAACgB,SAAS,IAAI;MACpB,MAAMsB,WAAW,GAAGtB,SAAS,CAACf,aAAa,CAAC,CAACyB,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClE,IAAID,WAAW,IAAIA,WAAW,CAACV,IAAI,KAAKO,UAAU,IAAIG,WAAW,CAACX,MAAM,KAAK,KAAK,EAAE;QAClF,OAAOX,SAAS;MAClB;MAEA,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;MACnCC,YAAY,CAAChB,aAAa,CAAC,CAACyB,QAAQ,CAACc,IAAI,CAAC;QAAEb,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEO;MAAW,CAAC,CAAC;MAE9E3B,YAAY,CAACa,OAAO,CAAC,OAAO,EAAET,IAAI,CAACU,SAAS,CAACL,YAAY,CAAC,CAAC;MAE3D,OAAOA,YAAY;IACrB,CAAC,CAAC;IAEF,OAAOkB,UAAU;EACnB,CAAC;EAED,MAAMM,UAAU,GAAG,MAAOjB,OAAO,IAAK;IACpC,IAAIvB,aAAa,KAAK,IAAI,EAAE;MAC1BD,QAAQ,CAACgB,SAAS,IAAI;QACpB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;QACnCC,YAAY,CAAChB,aAAa,CAAC,CAACyB,QAAQ,CAACc,IAAI,CAAC;UAAEb,MAAM,EAAE,MAAM;UAAEC,IAAI,EAAEJ;QAAQ,CAAC,CAAC;QAC5E,OAAOP,YAAY;MACrB,CAAC,CAAC;MAEF,IAAI;QACF,MAAMM,cAAc,CAACC,OAAO,CAAC;MAC/B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAG;MAAEzB,EAAE,EAAErB,KAAK,CAACe,MAAM;MAAEY,QAAQ,EAAE;IAAG,CAAC;IAClD1B,QAAQ,CAAEgB,SAAS,IAAK;MACtB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,EAAE6B,OAAO,CAAC;MAC5CrC,YAAY,CAACa,OAAO,CAAC,OAAO,EAAET,IAAI,CAACU,SAAS,CAACL,YAAY,CAAC,CAAC;MAC3D,OAAOA,YAAY;IACrB,CAAC,CAAC;IACFf,gBAAgB,CAAC2C,OAAO,CAACzB,EAAE,CAAC;EAC9B,CAAC;EAED,MAAM0B,gBAAgB,GAAIC,MAAM,IAAK;IACnC7C,gBAAgB,CAAC6C,MAAM,CAAC;EAC1B,CAAC;EAED,oBACEnD,OAAA;IAAKoD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrD,OAAA;MAAKoD,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBrD,OAAA;QAAQsD,OAAO,EAAEN,aAAc;QAAAK,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjD1D,OAAA;QAAQsD,OAAO,EAAEA,CAAA,KAAM9C,eAAe,CAAC,IAAI,CAAE;QAAA6C,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/D1D,OAAA,CAACF,OAAO;QAACwD,OAAO,EAAEnC;MAAiB;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtC1D,OAAA,CAACL,WAAW;QAACQ,KAAK,EAAEA,KAAM;QAACwD,YAAY,EAAET;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACN1D,OAAA;MAAKoD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBrD,OAAA;QAAKoD,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBhD,aAAa,KAAK,IAAI,IAAIF,KAAK,CAACE,aAAa,CAAC,IAC7CF,KAAK,CAACE,aAAa,CAAC,CAACyB,QAAQ,CAACG,GAAG,CAAC,CAACL,OAAO,EAAEgC,KAAK,kBAC/C5D,OAAA;UAAiBoD,SAAS,EAAE,WAAWxB,OAAO,CAACG,MAAM,EAAG;UAAAsB,QAAA,EACrDzB,OAAO,CAACI;QAAI,GADL4B,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN1D,OAAA,CAACJ,SAAS;QAACiE,MAAM,EAAEhB;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACLnD,YAAY,iBACXP,OAAA,CAACH,QAAQ;MACPiE,OAAO,EAAEA,CAAA,KAAMtD,eAAe,CAAC,KAAK,CAAE;MACtCuD,MAAM,EAAGC,UAAU,IAAKtD,gBAAgB,CAACsD,UAAU;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxD,EAAA,CA1HID,GAAG;AAAAgE,EAAA,GAAHhE,GAAG;AA4HT,eAAeA,GAAG;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}