{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggel\\\\Downloads\\\\LLMs\\\\pwa-chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n\n  // Load chat history from local storage\n  useEffect(() => {\n    const savedChats = localStorage.getItem('chats');\n    if (savedChats) {\n      const parsedChats = JSON.parse(savedChats);\n      setChats(parsedChats);\n      setCurrentChat(parsedChats.length > 0 ? 0 : null);\n      setMessages(parsedChats.length > 0 ? parsedChats[0].messages : []);\n    }\n  }, []);\n\n  // Save chat history to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('chats', JSON.stringify(chats));\n  }, [chats]);\n  const handleSend = async message => {\n    if (currentChat !== null) {\n      const updatedChats = [...chats];\n      updatedChats[currentChat].messages.push({\n        sender: 'user',\n        text: message\n      });\n      setChats(updatedChats);\n      setMessages([...updatedChats[currentChat].messages]);\n      try {\n        const fullChat = updatedChats[currentChat].messages.map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'assistant',\n          content: msg.text\n        }));\n        const response = await axios.post('http://127.0.0.1:8080/v1/chat/completions', {\n          messages: fullChat\n        });\n        const botMessage = response.data.choices[0].message.content;\n        updatedChats[currentChat].messages.push({\n          sender: 'bot',\n          text: botMessage\n        });\n        setChats(updatedChats);\n        setMessages([...updatedChats[currentChat].messages]);\n\n        // Save chat history to local storage after receiving the response\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\n      } catch (error) {\n        console.error('Error communicating with the API:', error);\n      }\n    }\n  };\n  const handleNewChat = () => {\n    const newChat = {\n      id: chats.length,\n      messages: []\n    };\n    const updatedChats = [...chats, newChat];\n    setChats(updatedChats);\n    setCurrentChat(newChat.id);\n    setMessages([]);\n    localStorage.setItem('chats', JSON.stringify(updatedChats)); // Save immediately after creating a new chat\n  };\n  const handleSelectChat = chatId => {\n    setCurrentChat(chatId);\n    setMessages(chats[chatId].messages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewChat,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatHistory, {\n        chats: chats,\n        onSelectChat: handleSelectChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: currentChat !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: message.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZQSUw+VfuWZaK0LQjd99yi/HiyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatHistory","ChatInput","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","chats","setChats","currentChat","setCurrentChat","savedChats","localStorage","getItem","parsedChats","JSON","parse","length","setItem","stringify","handleSend","message","updatedChats","push","sender","text","fullChat","map","msg","role","content","response","post","botMessage","data","choices","error","console","handleNewChat","newChat","id","handleSelectChat","chatId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSelectChat","index","onSend","_c","$RefreshReg$"],"sources":["C:/Users/aggel/Downloads/LLMs/pwa-chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput';\nimport './App.css';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n\n  // Load chat history from local storage\n  useEffect(() => {\n    const savedChats = localStorage.getItem('chats');\n    if (savedChats) {\n      const parsedChats = JSON.parse(savedChats);\n      setChats(parsedChats);\n      setCurrentChat(parsedChats.length > 0 ? 0 : null);\n      setMessages(parsedChats.length > 0 ? parsedChats[0].messages : []);\n    }\n  }, []);\n\n  // Save chat history to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('chats', JSON.stringify(chats));\n  }, [chats]);\n\n  const handleSend = async (message) => {\n    if (currentChat !== null) {\n      const updatedChats = [...chats];\n      updatedChats[currentChat].messages.push({ sender: 'user', text: message });\n      setChats(updatedChats);\n      setMessages([...updatedChats[currentChat].messages]);\n\n      try {\n        const fullChat = updatedChats[currentChat].messages.map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'assistant',\n          content: msg.text\n        }));\n\n        const response = await axios.post('http://127.0.0.1:8080/v1/chat/completions', {\n          messages: fullChat,\n        });\n\n        const botMessage = response.data.choices[0].message.content;\n        updatedChats[currentChat].messages.push({ sender: 'bot', text: botMessage });\n        setChats(updatedChats);\n        setMessages([...updatedChats[currentChat].messages]);\n\n        // Save chat history to local storage after receiving the response\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\n      } catch (error) {\n        console.error('Error communicating with the API:', error);\n      }\n    }\n  };\n\n  const handleNewChat = () => {\n    const newChat = { id: chats.length, messages: [] };\n    const updatedChats = [...chats, newChat];\n    setChats(updatedChats);\n    setCurrentChat(newChat.id);\n    setMessages([]);\n    localStorage.setItem('chats', JSON.stringify(updatedChats)); // Save immediately after creating a new chat\n  };\n\n  const handleSelectChat = (chatId) => {\n    setCurrentChat(chatId);\n    setMessages(chats[chatId].messages);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"sidebar\">\n        <button onClick={handleNewChat}>New Chat</button>\n        <ChatHistory chats={chats} onSelectChat={handleSelectChat} />\n      </div>\n      <div className=\"main\">\n        <div className=\"chat-window\">\n          {currentChat !== null && (\n            <>\n              {messages.map((message, index) => (\n                <div key={index} className={`message ${message.sender}`}>\n                  {message.text}\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n        <ChatInput onSend={handleSend} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}